@page "/addinventory"
@inject IAddInventoryUseCase AddInventoryUseCase

<h3>Add Inventory</h3>
<div class="mb-4"></div>
<div class="d-flex">
	<div class="flex-lg-shrink-0 mb-1">
		<EditForm Model="inventory" FormName="formInventory" OnValidSubmit="Save">
			<div class="form-group">
				<label for="name:">Inventory Name</label>
				<InputText id="name"
				@bind-Value="inventory.InventoryName"
				class="form-control" />
			</div>
			<div class="form-group">
				<label for="quantity:">Quantity</label>
				<InputNumber id="quantity"
				@bind-Value="inventory.Quantity"
				class="form-control" />
			</div>
			<div class="form-group">
				<label for="price:">Price</label>
				<InputNumber id="price"
				@bind-Value="inventory.Price"
				class="form-control" />
			</div>

			<button type="submit" class="btn btn-primary">Save</button>
		</EditForm>
	</div>

</div>
<button onclick="Reset" class="btn btn-secondary">Reset</button>


@code {
	[SupplyParameterFromForm]
	private Inventory inventory { get; set; } = new();

	private async Task Save()
	{
		await AddInventoryUseCase.ExecuteAsync(inventory);
	}
	private void Reset()
	{
		inventory = new();
	}
}
